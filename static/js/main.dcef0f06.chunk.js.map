{"version":3,"sources":["components/NavBar/index.js","components/AuthTabs/index.js","components/ForgotPasswordButton/SendCodeForm.js","components/ForgotPasswordButton/ResetPasswordForm.js","components/ForgotPasswordButton/index.js","components/LoginForm/index.js","components/RegistrationForm/RegistrationForm.style.js","components/RegistrationForm/RegistrationField.js","components/RegistrationForm/index.js","flattenData/index.js","components/List/ItemCreationForm/index.js","config/index.js","components/EditInstanceForm/index.js","components/DeleteInstanceMenu/index.js","components/List/Item/index.js","components/source-props/list.js","components/List/Items/index.js","App.js","serviceWorker.js","client/index.js","index.js"],"names":["Wrapper","styled","div","NavBar","MenuContainer","Button","button","selected","AuthTabs","menuTitles","children","useState","selectedTab","setSelectedTab","map","title","index","onClick","e","preventDefault","React","Children","child","class","SendCodeForm","onSubmit","onCancel","error","disabled","email","setEmail","type","onChange","target","value","ResetPasswordForm","password","setPassword","passwordConfirm","setPasswordConfirm","code","setCode","formError","setFormError","formIncomplete","compose","graphql","FORGOT_PASSWORD","name","RESET_PASSWORD","withNoStack","getPasswordResetCode","resetPassword","platformId","formVisible","setFormVisible","userNameOrEmail","setUsernameOrEmail","passwordReset","setPasswordReset","setError","submitting","setSubmitting","hideForm","handleEmailSubmit","a","variables","stackId","handlePasswordSubmit","Row","loading","currentUser","login","username","setUsername","isSubmitting","setIsSubmitting","handleSubmit","message","graphQLErrors","length","htmlFor","id","ErrorContainer","RegistrationField","fieldLabel","initialValues","firstName","lastName","passwordConfirmation","validationSchema","Yup","shape","label","required","matches","min","oneOf","RegistrationForm","userClassId","onSuccess","useMutation","REGISTER_USER","register","registrationCompleted","setRegistrationCompleted","values","console","log","isValid","dirty","isValidating","flattenData","element","flatData","instance","filter","typeId","instances","flattenChildData","Form","EXECUTE","userId","createItem","refetchQueries","itemValue","updateItemValue","updateLoading","actionId","executionParameters","JSON","stringify","parentInstanceId","unrestricted","createItemResponse","parse","data","Execute","onKeyPress","charCode","props","hoverColor","EditInstanceForm","onSave","Container","DeleteInstanceMenu","onDelete","ItemStyleWrapper","isDeleting","item","parentId","updateInstance","deleteInstance","onSelect","isEditMode","updateIsEditMode","isSaving","updateIsSaving","isDeleteMode","updateIsDeleteMode","updateIsDeleting","instanceId","SOURCE_LIST_QUERY","gql","LIST_RELATIONSHIPS","ItemsStyleWrapper","Items","state","selectedItemId","wrapperRef","createRef","handleClick","node","current","contains","setState","handleSelect","document","addEventListener","this","removeEventListener","parameters","typeRelationships","query","items","unitData","el","ref","key","v4","Component","LoginWrapper","App","className","Boolean","window","location","hostname","match","authLink","createAuthLink","link","ApolloLink","from","httpLink","ApolloClient","cache","InMemoryCache","dataIdFromObject","object","__typename","ReactDOM","render","client","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.dcef0f06.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nimport { LogoutButton } from '@nostack/no-stack';\n\n// change styling here\nconst Wrapper = styled.div`\n  left: 0;\n  top: 0;\n  padding: 1em 3em;\n  font-size: 1rem;\n  color: #fffff0;\n  background-color: #00000f;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst NavBar = () => (\n  <Wrapper>\n    <div>multitask</div>\n    <div>\n      <LogoutButton />\n    </div>\n  </Wrapper>\n);\n\nexport default NavBar;\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\n\nconst MenuContainer = styled.div`\n  padding: 1em;\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  border-radius: 10px;\n  box-shadow: 10px 10px 8px rgba(0, 0, 0, 0.6);\n\n  margin-bottom: 20px;\n`;\n\nconst Button = styled.button(({ selected }) => `\n  font-size: 1.25em;\n  background-color: #ffffff;\n  opacity: ${selected ? 1.0 : 0.5};\n  border: none;\n  padding: 5px;\n  cursor: ${selected ? 'initial' : 'pointer'};\n  transition: opacity 0.5s ease;\n\n  &:hover {\n    opacity: 1.0;\n    text-decoration: underline;\n  }\n`);\n\nconst AuthTabs = ({ menuTitles, children }) => {\n  const [selectedTab, setSelectedTab] = useState(0);\n\n  return (\n    <div>\n      <MenuContainer>\n        {menuTitles.map((title, index) => (\n          <Button \n            selected={index === selectedTab}\n            onClick={e => {\n              e.preventDefault();\n\n              setSelectedTab(index);\n            }\n          }>\n            {title}\n          </Button>\n        ))}\n      </MenuContainer>\n      <div>\n        {React.Children.map(children, (child, index) => {\n          if (index !== selectedTab) {\n            return null;\n          }\n\n          return (\n            <div class=\"test\">{child}</div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default AuthTabs;\n","import React, { useState } from 'react';\n\nconst SendCodeForm = ({ onSubmit, onCancel, error, disabled }) => {\n  const [email, setEmail] = useState('');\n\n  const handleChange = e => {\n    e.preventDefault();\n\n    setEmail(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    onSubmit(email);\n  };\n\n  const handleCancel = e => {\n    e.preventDefault();\n\n    onCancel();\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <h3>Reset Password</h3>\n      <div>\n        Your Username/Email:\n        <input type=\"text\" onChange={handleChange} disabled={disabled} />\n      </div>\n      <div>\n        <button type=\"submit\" disabled={disabled || !email}>\n          Send Code\n        </button>\n        <button type=\"button\" onClick={handleCancel} disabled={disabled}>\n          Cancel\n        </button>\n      </div>\n      {error && <div>{error}</div>}\n    </form>\n  );\n};\n\nexport default SendCodeForm;\n","import React, { useState } from 'react';\n\nconst ResetPasswordForm = ({ onSubmit, onCancel, disabled, error }) =>{\n  const [password, setPassword] = useState('');\n  const [passwordConfirm, setPasswordConfirm] = useState('');\n  const [code, setCode] = useState('');\n  const [formError, setFormError] = useState('');\n\n  const handlePasswordChange = e => {\n    e.preventDefault();\n\n    setPassword(e.target.value);\n  };\n\n  const handlePasswordConfirmChange = e => {\n    e.preventDefault();\n\n    setPasswordConfirm(e.target.value);\n  };\n\n  const handleCodeChange = e => {\n    e.preventDefault();\n\n    setCode(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    setFormError('');\n\n    if (password !== passwordConfirm) {\n      setFormError('New password and confirmation must match.');\n      return;\n    }\n\n    onSubmit(password, code);\n  };\n\n  const handleCancel = e => {\n    e.preventDefault();\n\n    onCancel();\n  }\n\n  const formIncomplete = !password || !passwordConfirm || !code;\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <h3>Reset Password</h3>\n      <p>A password reset code has been sent to your email. Enter the code below.</p>\n      <div>\n        New Password:\n        <input type=\"password\" onChange={handlePasswordChange} disabled={disabled} />\n      </div>\n      <div>\n        Confirm Password:\n        <input \n          type=\"password\"\n          onChange={handlePasswordConfirmChange} \n          disabled={disabled} \n        />\n      </div>\n      <div>\n        Password Reset Code:\n        <input type=\"password\" onChange={handleCodeChange} disabled={disabled} />\n      </div>\n      <div>\n        <button type=\"submit\" disabled={disabled || formIncomplete}>Change Password</button>\n        <button type=\"button\" onClick={handleCancel} disabled={disabled}>Cancel</button>\n      </div>\n      {error && <div>{error}</div>}\n      {formError && <div>{formError}</div>}\n    </form>\n  );\n};\n\nexport default ResetPasswordForm;\n","import React, { useState } from 'react';\nimport { graphql } from '@apollo/react-hoc';\nimport compose from '@shopify/react-compose';\nimport styled from 'styled-components';\nimport { withNoStack, FORGOT_PASSWORD, RESET_PASSWORD } from '@nostack/no-stack';\n\nimport SendCodeForm from './SendCodeForm';\nimport ResetPasswordForm from './ResetPasswordForm';\n\nconst Button = styled.button`\n  border: none;\n  text-decoration: underline;\n  background: none;\n  cursor: pointer;\n\n  &:hover {\n    text-decoration: none;\n  }\n`;\n\nconst ForgotPasswordButton = ({ getPasswordResetCode, resetPassword, platformId }) => {\n  const [formVisible, setFormVisible] = useState(false);\n  const [userNameOrEmail, setUsernameOrEmail] = useState('');\n  const [passwordReset, setPasswordReset] = useState(false);\n  const [error, setError] = useState('');\n  const [submitting, setSubmitting] = useState(false);\n\n  const showForm = () => setFormVisible(true);\n\n  const hideForm = () => {\n    setError('');\n    setSubmitting(false);\n    setPasswordReset(false);\n    setFormVisible(false);\n    setUsernameOrEmail('');\n  };\n\n  const handleEmailSubmit = async userNameOrEmail => {\n    setError('');\n    setSubmitting(true);\n    \n    try {\n      await getPasswordResetCode({\n        variables: {\n          userNameOrEmail,\n          stackId: platformId,\n        },\n      });\n\n      setUsernameOrEmail(userNameOrEmail);\n    } catch (e) {\n      setError('Something went wrong. Please try again.');\n    }\n\n    setSubmitting(false);\n  };\n\n  const handlePasswordSubmit = async (password, code) => {\n    setError('');\n    setSubmitting(true);\n\n    try {\n      await resetPassword({\n        variables: {\n          userNameOrEmail, \n          password,\n          code,\n          stackId: platformId,\n        },\n      });\n\n      setPasswordReset(true);\n    } catch (e) {\n      setError('Something went wrong. Please try again.');\n    }\n\n    setSubmitting(false);\n  };\n\n  if (!formVisible) {\n    return (\n      <Button type=\"button\" onClick={showForm}>\n        Forgot Password?\n      </Button>\n    );\n  }\n\n  if (!userNameOrEmail) {\n    return (\n      <SendCodeForm \n        onSubmit={handleEmailSubmit}\n        onCancel={hideForm} \n        disabled={submitting}\n        error={error}\n      /> \n    );\n  }\n\n  if (userNameOrEmail && !passwordReset) {\n    return (\n      <ResetPasswordForm\n        onSubmit={handlePasswordSubmit}\n        onCancel={hideForm} \n        disabled={submitting}\n        error={error}\n      />\n    );\n  }\n\n  return (\n    <p>\n      Your password has been reset. You may now login.\n      <Button type=\"button\" onClick={hideForm}>Ok.</Button>\n    </p>\n  );\n};\n\nexport default compose(\n  graphql(FORGOT_PASSWORD, { name: 'getPasswordResetCode' }),\n  graphql(RESET_PASSWORD, { name: 'resetPassword' }),\n  withNoStack,\n)(ForgotPasswordButton);\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\n\nimport { withNoStack } from '@nostack/no-stack';\n\nimport ForgotPasswordButton from '../ForgotPasswordButton';\n\nconst Wrapper = styled.div`\n  width: 250px;\n\n  padding: 1em 0;\n\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  border-radius: 10px 10px 10px 10px;\n  box-shadow: 10px 10px 8px -1px rgba(0, 0, 0, 0.6);\n`;\n\nconst Row = styled.div`\n  margin: 0.5em;\n  padding: 0.5em;\n  text-align: center;\n\n  input {\n    display: block;\n    margin: 0.5em auto;\n    width: 80%;\n  }\n`;\n\nconst LoginForm = ({ loading, currentUser, login }) => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [error, setError] = useState('');\n\n  if (loading || currentUser) {\n    return null;\n  }\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    setIsSubmitting(true);\n\n    try {\n      await login({\n        username,\n        password,\n      });\n    } catch (error) {\n      setError(\n        error.message ||\n        (error.graphQLErrors &&\n          error.graphQLErrors.length &&\n          error.graphQLErrors[0]) ||\n        error,\n      );\n      setIsSubmitting(false);\n    }\n  };\n\n  return (\n    <Wrapper>\n      <form onSubmit={handleSubmit}>\n        <Row>\n          <label htmlFor=\"nostack-username\">\n            Username:\n            <input\n              id=\"nostack-username\"\n              type=\"text\"\n              name=\"username\"\n              disabled={isSubmitting}\n              value={username}\n              onChange={e => setUsername(e.target.value)}\n            />\n          </label>\n        </Row>\n        <Row>\n          <label htmlFor=\"nostack-password\">\n            Password:\n            <input\n              id=\"nostack-password\"\n              type=\"password\"\n              name=\"password\"\n              disabled={isSubmitting}\n              value={password}\n              onChange={e => setPassword(e.target.value)}\n            />\n          </label>\n        </Row>\n        <Row>\n          <button\n            type=\"submit\"\n            disabled={isSubmitting || !username || !password}\n          >\n            Log In\n          </button>\n        </Row>\n        {error && <Row>{error}</Row>}\n      </form>\n      <Row>\n        <ForgotPasswordButton />\n      </Row>\n    </Wrapper>\n  );\n}\n\nexport default withNoStack(LoginForm);\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  width: 250px;\n\n  padding: 1em 0;\n\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  border-radius: 10px 10px 10px 10px;\n  box-shadow: 10px 10px 8px -1px rgba(0, 0, 0, 0.6);\n`;\n\nexport const ErrorContainer = styled.div`\n  font-size: 0.75rem;\n  color: tomato;\n`;\n\nexport const Row = styled.div`\n  margin: 0.5em;\n  padding: 0.5em;\n  text-align: center;\n\n  input {\n    display: block;\n    margin: 0.5em auto;\n    width: 80%;\n  }\n`;\n","import React from 'react';\nimport { Field, ErrorMessage } from 'formik';\nimport { Row, ErrorContainer } from './RegistrationForm.style';\n\nconst RegistrationField = ({\n  fieldLabel,\n  type,\n  name,\n}) => (\n  <Row>\n    <label>\n      {fieldLabel}\n      <Field type={type} name={name} />\n    </label>\n    <ErrorContainer>\n      <ErrorMessage name={name} />\n    </ErrorContainer>\n  </Row>\n);\n\nexport default RegistrationField;\n","import React, {useState} from 'react'\nimport {Formik, Form} from 'formik'\nimport {useMutation} from '@apollo/react-hooks'\nimport * as Yup from 'yup'\nimport {REGISTER_USER} from '@nostack/no-stack'\n\nimport RegistrationField from './RegistrationField'\nimport {Wrapper, Row, ErrorContainer} from './RegistrationForm.style'\n\nconst initialValues = {\n  name: '',\n  firstName: '',\n  lastName: '',\n  email: '',\n  password: '',\n  passwordConfirmation: '',\n}\n\nconst validationSchema = Yup.object().shape({\n  name: Yup.string()\n  .label('name')\n  .required('Please enter desired username.'),\n  firstName: Yup.string()\n  .label('firstName')\n  .required('Please enter your first name.'),\n  lastName: Yup.string()\n  .label('lastName')\n  .required('Please enter your last name.'),\n  email: Yup.string()\n  .label('email')\n  .email('Enter a valid email.')\n  .required('Please enter your email.'),\n  password: Yup.string()\n  .label('password')\n  .matches(/(?=.*\\d)/, 'Must have at least one numerical character')\n  .matches(\n    /(?=.*[#?!@$%^&*-.,:;'\"><[\\]{}()_|\\\\/~])/,\n    'Must have at least one special character.',\n  )\n  .min(8, 'Must be at least 8 characters.')\n  .required('Please enter your desired password.'),\n  passwordConfirmation: Yup.string()\n  .oneOf([Yup.ref('password'), '', null], 'Passwords must match.')\n  .required('Please confirm your password.'),\n})\n\nconst RegistrationForm = ({\n  userClassId,\n  onSuccess,\n}) => {\n  const [register] = useMutation(REGISTER_USER)\n  const [registrationCompleted, setRegistrationCompleted] = useState(false)\n  const [formError, setFormError] = useState('')\n\n  const handleSubmit = async (\n    values,\n    {setSubmitting},\n  ) => {\n    setFormError('')\n\n    if (values.password !== values.passwordConfirmation) {\n      return\n    }\n\n    try {\n      await register({\n        variables: {\n          userClassId,\n          name: values.name,\n          firstName: values.firstName,\n          lastName: values.lastName,\n          email: values.email,\n          password: values.password,\n        },\n      })\n\n      setRegistrationCompleted(true)\n\n      if (onSuccess) {\n        onSuccess()\n      }\n    } catch (error) {\n      console.log(error)\n      console.log(error.graphQLErrors)\n\n      setFormError('Something went wrong. Please try again.')\n    }\n\n    setSubmitting(false)\n  }\n\n  if (registrationCompleted) {\n    return (\n      <Wrapper>\n        <p>Please check your email and confirm that you are really you.  Then you can log in!</p>\n      </Wrapper>\n    )\n  }\n\n  return (\n    <Wrapper>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={handleSubmit}\n      >\n        {({isSubmitting, isValid, dirty, isValidating}) => (\n          <Form>\n            <RegistrationField fieldLabel=\"Username:\" type=\"text\" name=\"name\" />\n            <RegistrationField\n              fieldLabel=\"First Name:\"\n              type=\"text\"\n              name=\"firstName\"\n            />\n            <RegistrationField\n              fieldLabel=\"Last Name:\"\n              type=\"text\"\n              name=\"lastName\"\n            />\n            <RegistrationField fieldLabel=\"Email:\" type=\"email\" name=\"email\" />\n            <RegistrationField\n              fieldLabel=\"Password:\"\n              type=\"password\"\n              name=\"password\"\n            />\n            <RegistrationField\n              fieldLabel=\"Confirm Password:\"\n              type=\"password\"\n              name=\"passwordConfirmation\"\n            />\n            <Row>\n              <button\n                type=\"submit\"\n                disabled={isSubmitting || !isValid || isValidating || !dirty}\n              >\n                Sign Up!\n              </button>\n              {formError && <ErrorContainer>{formError}</ErrorContainer>}\n            </Row>\n          </Form>\n        )}\n      </Formik>\n    </Wrapper>\n  )\n}\n\nexport default RegistrationForm\n","export function flattenChildData(element) {\n  const flatData ={\n    typeId: element.typeId,\n    instances: []\n  };\n\n  if (element.instances && element.instances.length > 0) {\n    flatData.instances = element.instances.filter(child => !!child).map(\n      instance => flattenData(instance)\n    );\n  }\n\n  return flatData;\n};\n\nexport function flattenData(element) {\n  const flatData = {\n    ...element.instance,\n    children: []\n  };\n\n  if (element.children && element.children.length > 0) {\n    flatData.children = element.children.filter(child => !!child).map(\n      child => flattenChildData(child)\n    );\n  }\n\n  return flatData;\n};\n","import React, { useState } from 'react';\nimport { graphql } from '@apollo/react-hoc';\nimport styled from 'styled-components';\nimport { withNoStack, EXECUTE } from '@nostack/no-stack';\nimport compose from '@shopify/react-compose';\n\nimport { CREATE_ITEM_FOR_LIST_ACTION_ID\n } from '../../../config';\n\n// change styling here\nconst Form = styled.div`\n  margin: 2em;\n  padding: 1.5em;\n  border: none;\n  border-radius: 5px;\n  background-color: #F5F5F5;\n`;\n\nconst Button = styled.button`\n  margin-left: 1em;\n`;\n\nfunction ItemCreationForm({ userId, createItem, refetchQueries }) {\n  const [ itemValue, updateItemValue ] = useState('');\n  const [ loading, updateLoading ] = useState(false);\n\n  function handleChange(e) {\n    updateItemValue(e.target.value);\n  }\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n\n    if (!itemValue) {\n      return;\n    }\n\n    updateLoading(true);\n\n\n\n\n\n\n\n\n    const createItemResponse = await createItem({\n      variables: {\n        actionId: CREATE_ITEM_FOR_LIST_ACTION_ID,\n        executionParameters: JSON.stringify({\n          parentInstanceId: userId,\n          value: itemValue,\n        }),\n        unrestricted: false,\n      },\n      refetchQueries\n    });\n\n    const newItemData = JSON.parse(createItemResponse.data.Execute);\n\n    \n\n\n    updateItemValue('');\n    updateLoading(false);\n  }\n\n  function handleKeyPress(e) {\n    if (e.charCode === 13) {\n      handleSubmit(e);\n    }\n  }\n\n  return (\n    <Form>\n      <label htmlFor=\"item-value\">\n        Item:\n        <input\n          id=\"item-value\"\n          type=\"text\"\n          onChange={handleChange}\n          onKeyPress={handleKeyPress}\n          value={ itemValue }\n          disabled={loading}\n        />\n      </label>\n      <Button type=\"submit\"  disabled={loading}  onClick={handleSubmit}>\n        {\n          loading\n            ? 'Creating Item...'\n            : 'Create Item'\n        }\n      </Button>\n    </Form>\n  );\n}\n\nexport default compose(\n  graphql(EXECUTE, { name: 'createItem' }),\n  \n)(ItemCreationForm);\n","/*\n  This file was generated automatically by nostack 'makecode' for the app 'multitask'.\n  If you build a new stack from a template, this version will probably need to change.\n\n  For instance, it will update if you run 'makecode' again. Fair warning, that will\n  change a lot of your code. If you modify your current stack to add actions, sources,\n  or types, it would make sense to add constants here.\n\n  But, you should *not* add permanent, separate configuration material or other material that is not directly\n  'managed by NoStack, because this will will be replaced with every call to 'makecode'.\n */\n\n// stack id\nexport const PLATFORM_ID = 'us-east-1_kYI8RNIb1';\n\n// sources\nexport const SOURCE_LIST_ID='0150200e-61dc-45d6-9bee-dd908334dd15';\n\n// types\nexport const TYPE_MODERATOR_ID='us-east-1_kYI8RNIb1moderatorClass';\nexport const TYPE_USER_ID='8a02c291-b299-466b-b615-b78838cfb08e';\nexport const TYPE_ITEM_ID='3ad43af8-404f-4914-9ba5-9bf853a01ae6';\n\n// actions\n    // CREATE_INSTANCE\n\n    // UPDATE_INSTANCE\n    export const UPDATE_ITEM_FOR_LIST_ACTION_ID='f076119e-b81f-404e-88d9-043897e34235';\n\n    // DELETE_INSTANCE\n    export const DELETE_ITEM_FOR_LIST_ACTION_ID='2c46559f-7997-4fc3-9164-62c9957a6320';\n\n    // ADD_INSTANCE_ASSN\n\n    // UPDATE_INSTANCE_ASSN\n\n    // DELETE_INSTANCE_ASSN\n\n    // CREATE_INSTANCE_WITH_UNOWNED_PARENT\n    export const CREATE_ITEM_FOR_LIST_ACTION_ID='774c070a-c82c-4fed-b7bc-4a759e7ef4fb';\n\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Button = styled.button`\n  background: none;\n  border: none;\n  cursor: pointer;\n  font-size: 1.25rem;\n  padding: 0;\n  color: #bbbbbb;\n  transition: color 0.5s ease;\n  &:hover {\n    color: ${props => props.hoverColor || '#000000'};\n  }\n`;\n\nfunction EditInstanceForm({\n  id,\n  label,\n  value,\n  onChange,\n  onSave,\n  onCancel,\n  disabled,\n}) {\n  return (\n    <>\n      <label htmlFor={id}>\n        {label}\n        <input\n          id={id}\n          type=\"text\"\n          value={value}\n          onChange={onChange}\n          disabled={disabled}\n        />\n      </label>\n      <Button\n        type=\"button\"\n        hoverColor=\"#00FF00\"\n        onClick={onSave}\n        disabled={disabled}\n      >\n        &#10003;\n      </Button>\n      <Button\n        type=\"button\"\n        hoverColor=\"#FF0000\"\n        onClick={onCancel}\n        disabled={disabled}\n      >\n        &#10005;\n      </Button>\n    </>\n  );\n}\n\nexport default EditInstanceForm;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Button = styled.button`\n  background: none;\n  border: none;\n  cursor: pointer;\n  font-size: 1.25rem;\n  padding: 0;\n  color: #bbbbbb;\n  transition: color 0.5s ease;\n  &:hover {\n    color: ${props => props.hoverColor || '#000000'};\n  }\n`;\n\nconst Container = styled.div`\n  color: red;\n  margin: 1em;\n  padding: 1em;\n  border: 1px solid #eeeeee;\n`;\n\nfunction DeleteInstanceMenu({\n  onDelete,\n  onCancel,\n  disabled,\n}) {\n  return (\n    <Container>\n      Delete?\n      <Button\n        type=\"button\"\n        hoverColor=\"#00FF00\"\n        onClick={onDelete}\n        disabled={disabled}\n      >\n        &#10003;\n      </Button>\n      <Button\n        type=\"button\"\n        hoverColor=\"#FF0000\"\n        onClick={onCancel}\n        disabled={disabled}\n      >\n        &#10005;\n      </Button>\n    </Container>\n  )\n}\n\nexport default DeleteInstanceMenu;\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { EXECUTE } from '@nostack/no-stack';\nimport compose from '@shopify/react-compose';\nimport { graphql } from '@apollo/react-hoc';\n\nimport {\n  UPDATE_ITEM_FOR_LIST_ACTION_ID,\n  DELETE_ITEM_FOR_LIST_ACTION_ID,\n} from '../../../config';\n\nimport EditInstanceForm from '../../EditInstanceForm';\nimport DeleteInstanceMenu from '../../DeleteInstanceMenu';\n\n\n\n\n\n// add styling here\nconst ItemStyleWrapper = styled.div(({\n  selected,\n  isDeleting,\n}) => `\n  margin: 2em 1em;\n  padding: 1.5em;\n  border: ${selected ? '1px solid aquamarine': '1px solid white'};\n  border-radius: 10px;\n  box-shadow: 5px 5px 10px #888888;\n  background-color: ${isDeleting && 'tomato'};\n  cursor: ${selected ? 'auto' : 'pointer'};\n\n  &:hover {\n    border: 1px solid aquamarine;\n  }\n`);\n\nconst Button = styled.button`\n  background: none;\n  border: none;\n  cursor: pointer;\n  font-size: 1.25rem;\n  padding: 0;\n  color: #bbbbbb;\n  transition: color 0.5s ease;\n  &:hover {\n    color: ${props => props.hoverColor || '#000000'};\n  }\n`;\n\nfunction Item({\n  item,\n  parentId,\n  selected,\n  updateInstance,\n  deleteInstance,\n  refetchQueries,\n  onSelect,\n}) {\n  const [itemValue, updateItemValue] = useState(item.value);\n  const [isEditMode, updateIsEditMode] = useState(false);\n  const [isSaving, updateIsSaving] = useState(false);\n  const [isDeleteMode, updateIsDeleteMode] = useState(false);\n  const [isDeleting, updateIsDeleting] = useState(false);\n\n  \n\n\n  if (!selected) {\n    return (\n      <ItemStyleWrapper onClick={() => onSelect(item.id)}>\n        { itemValue }\n      </ItemStyleWrapper>\n    );\n  }\n\n  function handleItemValueChange(e) {\n    updateItemValue(e.target.value);\n  }\n\n  async function handleItemValueSave() {\n    updateIsSaving(true);\n\n    await updateInstance({\n      variables: {\n        actionId: UPDATE_ITEM_FOR_LIST_ACTION_ID,\n        executionParameters: JSON.stringify({\n          value: itemValue,\n          instanceId: item.id,\n        }),\n      },\n      refetchQueries,\n    });\n\n    updateIsEditMode(false);\n    updateIsSaving(false);\n  }\n\n  function handleCancelEdit() {\n    updateIsEditMode(false);\n  }\n\n  if (isEditMode) {\n    return (\n      <ItemStyleWrapper>\n        <EditInstanceForm\n          id={ item.id }\n          label=\"Item Value:\"\n          value={ itemValue }\n          onChange={handleItemValueChange}\n          onSave={handleItemValueSave}\n          onCancel={handleCancelEdit}\n          disabled={isSaving}\n        />\n      </ItemStyleWrapper>\n    );\n  }\n\n  async function handleDelete() {\n    updateIsDeleting(true);\n\n    try {\n      await deleteInstance({\n        variables: {\n          actionId: DELETE_ITEM_FOR_LIST_ACTION_ID,\n          executionParameters: JSON.stringify({\n            parentInstanceId: parentId,\n            instanceId: item.id,\n          }),\n        },\n        refetchQueries\n      });\n    } catch (e) {\n      updateIsDeleting(false);\n    }\n  }\n\n  function handleCancelDelete() {\n    updateIsDeleteMode(false);\n  }\n\n  if (isDeleteMode) {\n    return (\n      <ItemStyleWrapper\n        selected={selected}\n        isDeleting={isDeleting}\n      >\n        { itemValue }\n        <DeleteInstanceMenu\n          onDelete={handleDelete}\n          onCancel={handleCancelDelete}\n          disabled={isDeleting}\n        />\n      </ItemStyleWrapper>\n    );\n  }\n\n  return (\n    <ItemStyleWrapper selected={selected}>\n      { itemValue }\n      <Button\n        type=\"button\"\n        onClick={() => updateIsEditMode(true)}\n      >\n        &#9998;\n      </Button>\n      <Button\n        type=\"button\"\n        onClick={() => updateIsDeleteMode(true)}\n      >\n        &#128465;\n      </Button>\n\n      \n\n\n    </ItemStyleWrapper>\n  );\n}\n\nexport default compose(\n  graphql(EXECUTE, { name: 'updateInstance' }),\n  graphql(EXECUTE, { name: 'deleteInstance' })\n)(Item);\n","import gql from 'graphql-tag';\n\n  export const SOURCE_LIST_QUERY = gql`\n  query UNIT(\n    $id: ID!\n    $typeRelationships: String!\n    $parameters: String\n  ) {\n    unitData(\n      unitId: $id\n      typeRelationships: $typeRelationships\n      parameters: $parameters\n    )\n    {\n      instance {\n      id\n      value\n    }\n    }\n  }\n`;\n\nexport const LIST_RELATIONSHIPS = {\n   item: null,\n};","import React, { Component, createRef } from 'react';\nimport { Unit } from '@nostack/no-stack';\nimport styled from 'styled-components';\nimport { v4 } from 'uuid';\n\nimport { flattenData } from '../../../flattenData';\n\nimport ItemCreationForm from '../ItemCreationForm';\nimport Item from '../Item';\n\nimport { SOURCE_LIST_ID } from '../../../config';\nimport { LIST_RELATIONSHIPS, SOURCE_LIST_QUERY } from '../../source-props/list';\n\n// np__added_start unit: list, comp: Items, loc: styling\n\n// add styling here\nconst ItemsStyleWrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-evenly;\n`;\n// np__added_end unit: list, comp: Items, loc: styling\n\nclass Items extends Component {\n// np__added_start unit: list, comp: Items, loc: beginning\n// np__added_end unit: list, comp: Items, loc: beginning\n  state = {\n    selectedItemId: null,\n  };\n\n  wrapperRef = createRef();\n\n  componentDidMount() {\n    document.addEventListener('mousedown', this.handleClick);\n    }\n\n  componentWillUnmount() {\n    document.removeEventListener('mousedown', this.handleClick);\n  }\n\n  handleClick = e => {\n    const node = this.wrapperRef.current;\n\n    if (\n      node &&\n      node !== e.target &&\n      !node.contains(e.target)\n    ) {\n      this.setState({ selectedItemId: null });\n    }\n  }\n\n  handleSelect = id => this.setState({ selectedItemId: id });\n\n  render() {\n    const { userId } = this.props;\n    const { selectedItemId } = this.state;\n\n    const parameters = {\n      currentUser: userId,\n    };\n\n    return (\n      <Unit\n        id={ SOURCE_LIST_ID }\n        typeRelationships={ LIST_RELATIONSHIPS }\n        query={ SOURCE_LIST_QUERY }\n        parameters={parameters}\n      >\n        {({loading, error, data, refetchQueries}) => {\n          if (loading) return 'Loading...';\n\n          if (error) {\n            console.error(error);\n            return `Error: ${error.graphQLErrors}`\n          };\n\n          const items = data.unitData.map(el => flattenData(el));\n\n          return (\n            <>\n              <ItemCreationForm  userId={ userId } refetchQueries={refetchQueries}/>\n              <ItemsStyleWrapper ref={this.wrapperRef} onClick={this.handleClick}>\n                { items && items.map(item => (\n                  <Item\n                    key={v4()}\n                    parentId={ userId }\n                    item={ item }\n                    selected={ item.id === selectedItemId }\n                    refetchQueries={refetchQueries}\n                    onSelect={this.handleSelect}\n                  />\n                )) }\n              </ItemsStyleWrapper>\n                {/* np__added_start unit: list, comp: Items, loc: renderEnding */}\n                {/* np__added_end unit: list, comp: Items, loc: renderEnding */}\n            </>\n          );\n        }}\n      </Unit>\n    );\n  }\n}\n\nexport default Items;\n","import React from 'react';\nimport styled from 'styled-components';\nimport './App.css';\nimport { NoStackConsumer } from '@nostack/no-stack';\n\nimport { PLATFORM_ID, TYPE_USER_ID } from './config';\n\nimport NavBar from './components/NavBar';\nimport AuthTabs from './components/AuthTabs';\nimport LoginForm from './components/LoginForm';\nimport RegistrationForm from './components/RegistrationForm';\nimport Items from './components/List/Items';\n\nconst Wrapper = styled.div`\n  padding: 5em 5em;\n  min-width: 480px;\n`;\n\nconst LoginWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst App = () => (\n  <>\n    <NavBar />\n    <Wrapper className=\"App\">\n      <NoStackConsumer>\n        {({ loading, currentUser }) => {\n          if (loading) return null;\n\n          if (!currentUser) {\n            return (\n              <LoginWrapper>\n                <AuthTabs\n                  menuTitles={[\n                    'Login',\n                    'Register',\n                  ]}\n                >\n                  <LoginForm />\n                  <RegistrationForm\n                    platformId={PLATFORM_ID}\n                    userClassId={ TYPE_USER_ID }\n                  />\n                </AuthTabs>\n              </LoginWrapper>\n            );\n          }\n\n          return (\n            <Items userId={ currentUser.id } />\n          );\n        }}\n      </NoStackConsumer>\n    </Wrapper>\n  </>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ApolloClient } from 'apollo-client';\nimport { ApolloLink } from 'apollo-link';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { v4 } from 'uuid';\n\nimport { createAuthLink, httpLink } from '@nostack/no-stack';\n\nimport { PLATFORM_ID } from '../config';\n\nconst authLink = createAuthLink(PLATFORM_ID);\n\nconst link = ApolloLink.from([authLink, httpLink]);\n\nexport default new ApolloClient({\n  link,\n  cache: new InMemoryCache({\n    dataIdFromObject: object => object.id ? object.id + object.__typename : v4(),\n  }),\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { NoStackProvider } from '@nostack/no-stack';\n\nimport { PLATFORM_ID } from './config';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport client from './client';\n\nReactDOM.render(\n  <NoStackProvider client={client} platformId={PLATFORM_ID}>\n    <App />\n  </NoStackProvider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}